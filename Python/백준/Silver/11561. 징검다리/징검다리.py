"""
11:55

1. 첫 점프의 길이는 아무거나
2. 그 다음 점프는 이전 점프보다 1이상
3. n번(맨 마지막) 징검다리는 반드시 밟아야 함

N: 10^16
T
dp?

| - 1 - | -> 1
1
| - 1 - 2 - | -> 1
2
| - 1 - 2 - 3 - | -> 2
1 3, 3
| - 1 - 2 - 3 - 4 - | -> 2
1 4, 4
| - 1 - 2 - 3 - 4 - 5 - | -> 3
1 5, 2 5, 5
| - 1 - 2 - 3 - 4 - 5 - 6 - | -> 4
1 6, 2 6, 1 3 6, 6
| - 1 - 2 - 3 - 4 - 5 - 6 - 7 - | -> 
1 7, 2 7, 3 7, 1 3 7

| - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - | -> 
4: 1 3 6 10
3: 1 3 10, 1 4 10, 1 5 10
2: 1 10, 2 10, 3 10, 4 10
1: 10

0 1 3 6 10 15 21 28 36 45 55 66 78 91 
0 1 2 3 4  5  6  7  8  9  10 11 12 13
[1, 1, ]

아 경우의 수가 아니라 그냥 최대 징검다리의 수내 그럼 그냥 범위로 자면 될듯
"""
t = int(input())

# 7: 7 - 6 - 4 - 1 -

for _ in range(t):
    # n = int(input())
    # cnt = 0
    # while n > 0:
    #     cnt += 1
    #     n -= cnt
    # if n < 0:
    #     cnt -= 1
    # print(cnt)
    n = int(input())

    left = 0
    right = int(10**16)
    cnt = 0

    while left <= right:
        mid = (left + right) // 2
        
        # 1부터 mid까지의 합
        sum_val = mid * (mid + 1) // 2

        if sum_val <= n:
            cnt = mid
            left = mid + 1
        else:
            right = mid - 1
    print(cnt)